"use strict";
var KTSigninGeneral = (function () {
  var e,
    t,
    i,
    n = function (t) {
      i = FormValidation.formValidation(e, {
        fields: {
          email: {
            validators: {
              regexp: {
                regexp: /^[^\s@]+@[^\s@]+\.[^\s@]+$/,
                message: i18next.t("the value is not a valid email address"),
              },
              notEmpty: { message: i18next.t("email address is required") },
            },
          },
          password: {
            validators: {
              notEmpty: { message: i18next.t("password is required") },
            },
          },
        },
        plugins: {
          trigger: new FormValidation.plugins.Trigger(),
          bootstrap: new FormValidation.plugins.Bootstrap5({
            rowSelector: ".fv-row",
            eleInvalidClass: "",
            eleValidClass: "",
          }),
        },
      });
    },
    r = function (n) {
      t.addEventListener("click", function (n) {
        if ((n.preventDefault(), !0 == $("div").is(".cf-turnstile")))
          var r = {
            email: $("#signin-email").val(),
            passwd: $("#signin-passwd").val(),
            turnstile: turnstile.getResponse(),
          };
        else
          r = {
            email: $("#signin-email").val(),
            passwd: $("#signin-passwd").val(),
          };
        i.validate().then(function (i) {
          "Valid" == i
            ? (t.setAttribute("data-kt-indicator", "on"),
              (t.disabled = !0),
              setTimeout(function () {
                $.ajax({
                  type: "POST",
                  url: "/auth/signin",
                  dataType: "json",
                  data: r,
                  success: function (i) {
                    if (1 == i.ret) {
                      (e.querySelector('[name="email"]').value = ""),
                        (e.querySelector('[name="password"]').value = "");
                      var n = e.getAttribute("data-kt-redirect-url");
                      n && (location.href = n);
                    } else
                      Swal.fire({
                        text: i.msg,
                        icon: "error",
                        buttonsStyling: !1,
                        confirmButtonText: "OK, got it!",
                        customClass: { confirmButton: "btn btn-primary" },
                      }),
                        t.removeAttribute("data-kt-indicator"),
                        (t.disabled = !1);
                  },
                });
              }, 2e3))
            : Swal.fire({
                text: i18next.t(
                  "Đã phát hiện một số lỗi, vui lòng thử lại"
                ),
                icon: "error",
                buttonsStyling: !1,
                confirmButtonText: "OK, got it!",
                customClass: { confirmButton: "btn btn-primary" },
              });
        });
      });
    };
  return {
    init: function () {
      (e = document.querySelector("#kt_sign_in_form")),
        (t = document.querySelector("#kt_sign_in_submit")),
        n(),
        r();
    },
  };
})();
KTUtil.onDOMContentLoaded(function () {
  KTSigninGeneral.init();
});
